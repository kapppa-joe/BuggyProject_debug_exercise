Fetching gem metadata from https://rubygems.org/............
Using bundler 1.17.2
Using coderay 1.1.2
Using diff-lcs 1.3
Fetching ffi 1.9.25
Installing ffi 1.9.25 with native extensions
Gem::Ext::BuildError: ERROR: Failed to build gem native extension.

current directory:
/Users/joe.fong/academy/lectures/BuggyProject/vendor/bundle/ruby/2.6.0/gems/ffi-1.9.25/ext/ffi_c
/Users/joe.fong/.rbenv/versions/2.6.9/bin/ruby -I /Users/joe.fong/.rbenv/versions/2.6.9/lib/ruby/2.6.0
-r ./siteconf20220209-52625-kuqxsg.rb extconf.rb
checking for ffi_call() in -lffi... yes
checking for ffi_closure_alloc()... yes
checking for ffi_raw_call()... yes
checking for ffi_prep_raw_closure()... yes
checking for shlwapi.h... no
checking for ruby/thread.h... yes
checking for rb_thread_blocking_region()... no
checking for rb_thread_call_with_gvl()... yes
checking for rb_thread_call_without_gvl()... yes
checking for ffi_prep_cif_var()... yes
creating extconf.h
creating Makefile

current directory:
/Users/joe.fong/academy/lectures/BuggyProject/vendor/bundle/ruby/2.6.0/gems/ffi-1.9.25/ext/ffi_c
make "DESTDIR=" clean

current directory:
/Users/joe.fong/academy/lectures/BuggyProject/vendor/bundle/ruby/2.6.0/gems/ffi-1.9.25/ext/ffi_c
make "DESTDIR="
compiling AbstractMemory.c
AbstractMemory.c:1105:17: warning: '(' and '{' tokens introducing statement expression appear in
different macro expansion contexts [-Wcompound-token-split-by-macro]
    id_to_ptr = rb_intern("to_ptr");
                ^~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
AbstractMemory.c:1105:17: note: '{' token is here
    id_to_ptr = rb_intern("to_ptr");
                ^~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
AbstractMemory.c:1105:17: warning: '}' and ')' tokens terminating statement expression appear in
different macro expansion contexts [-Wcompound-token-split-by-macro]
    id_to_ptr = rb_intern("to_ptr");
                ^~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    }
    ^
AbstractMemory.c:1105:17: note: ')' token is here
    id_to_ptr = rb_intern("to_ptr");
                ^~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
AbstractMemory.c:1106:15: warning: '(' and '{' tokens introducing statement expression appear in
different macro expansion contexts [-Wcompound-token-split-by-macro]
    id_call = rb_intern("call");
              ^~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
AbstractMemory.c:1106:15: note: '{' token is here
    id_call = rb_intern("call");
              ^~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
AbstractMemory.c:1106:15: warning: '}' and ')' tokens terminating statement expression appear in
different macro expansion contexts [-Wcompound-token-split-by-macro]
    id_call = rb_intern("call");
              ^~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    }
    ^
AbstractMemory.c:1106:15: note: ')' token is here
    id_call = rb_intern("call");
              ^~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
AbstractMemory.c:1107:15: warning: '(' and '{' tokens introducing statement expression appear in
different macro expansion contexts [-Wcompound-token-split-by-macro]
    id_plus = rb_intern("+");
              ^~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
AbstractMemory.c:1107:15: note: '{' token is here
    id_plus = rb_intern("+");
              ^~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
AbstractMemory.c:1107:15: warning: '}' and ')' tokens terminating statement expression appear in
different macro expansion contexts [-Wcompound-token-split-by-macro]
    id_plus = rb_intern("+");
              ^~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    }
    ^
AbstractMemory.c:1107:15: note: ')' token is here
    id_plus = rb_intern("+");
              ^~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
6 warnings generated.
compiling ArrayType.c
compiling Buffer.c
Buffer.c:266:45: warning: '(' and '{' tokens introducing statement expression appear in different macro
expansion contexts [-Wcompound-token-split-by-macro]
        return order == BIG_ENDIAN ? ID2SYM(rb_intern("big")) : ID2SYM(rb_intern("little"));
                                            ^~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro
'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro
'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
Buffer.c:266:45: note: '{' token is here
        return order == BIG_ENDIAN ? ID2SYM(rb_intern("big")) : ID2SYM(rb_intern("little"));
                                            ^~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro
'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro
'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
Buffer.c:266:45: warning: '}' and ')' tokens terminating statement expression appear in different macro
expansion contexts [-Wcompound-token-split-by-macro]
        return order == BIG_ENDIAN ? ID2SYM(rb_intern("big")) : ID2SYM(rb_intern("little"));
                                            ^~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro
'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro
'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
Buffer.c:266:45: note: ')' token is here
        return order == BIG_ENDIAN ? ID2SYM(rb_intern("big")) : ID2SYM(rb_intern("little"));
                                            ^~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro
'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro
'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
Buffer.c:266:72: warning: '(' and '{' tokens introducing statement expression appear in different macro
expansion contexts [-Wcompound-token-split-by-macro]
        return order == BIG_ENDIAN ? ID2SYM(rb_intern("big")) : ID2SYM(rb_intern("little"));
                                                                       ^~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro
'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro
'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
Buffer.c:266:72: note: '{' token is here
        return order == BIG_ENDIAN ? ID2SYM(rb_intern("big")) : ID2SYM(rb_intern("little"));
                                                                       ^~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro
'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro
'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
Buffer.c:266:72: warning: '}' and ')' tokens terminating statement expression appear in different macro
expansion contexts [-Wcompound-token-split-by-macro]
        return order == BIG_ENDIAN ? ID2SYM(rb_intern("big")) : ID2SYM(rb_intern("little"));
                                                                       ^~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    }
    ^
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro
'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro
'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
Buffer.c:266:72: note: ')' token is here
        return order == BIG_ENDIAN ? ID2SYM(rb_intern("big")) : ID2SYM(rb_intern("little"));
                                                                       ^~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:413:29: note: expanded from macro
'ID2SYM'
#define ID2SYM(x) RB_ID2SYM(x)
                            ^
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:408:33: note: expanded from macro
'RB_ID2SYM'
#define RB_ID2SYM(x) (rb_id2sym(x))
                                ^
Buffer.c:276:23: warning: '(' and '{' tokens introducing statement expression appear in different macro
expansion contexts [-Wcompound-token-split-by-macro]
            if (id == rb_intern("little")) {
                      ^~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
Buffer.c:276:23: note: '{' token is here
            if (id == rb_intern("little")) {
                      ^~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
Buffer.c:276:23: warning: '}' and ')' tokens terminating statement expression appear in different macro
expansion contexts [-Wcompound-token-split-by-macro]
            if (id == rb_intern("little")) {
                      ^~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    }
    ^
Buffer.c:276:23: note: ')' token is here
            if (id == rb_intern("little")) {
                      ^~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
Buffer.c:279:30: warning: '(' and '{' tokens introducing statement expression appear in different macro
expansion contexts [-Wcompound-token-split-by-macro]
            } else if (id == rb_intern("big") || id == rb_intern("network")) {
                             ^~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
Buffer.c:279:30: note: '{' token is here
            } else if (id == rb_intern("big") || id == rb_intern("network")) {
                             ^~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
Buffer.c:279:30: warning: '}' and ')' tokens terminating statement expression appear in different macro
expansion contexts [-Wcompound-token-split-by-macro]
            } else if (id == rb_intern("big") || id == rb_intern("network")) {
                             ^~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    }
    ^
Buffer.c:279:30: note: ')' token is here
            } else if (id == rb_intern("big") || id == rb_intern("network")) {
                             ^~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
Buffer.c:279:56: warning: '(' and '{' tokens introducing statement expression appear in different macro
expansion contexts [-Wcompound-token-split-by-macro]
            } else if (id == rb_intern("big") || id == rb_intern("network")) {
                                                       ^~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
Buffer.c:279:56: note: '{' token is here
            } else if (id == rb_intern("big") || id == rb_intern("network")) {
                                                       ^~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
Buffer.c:279:56: warning: '}' and ')' tokens terminating statement expression appear in different macro
expansion contexts [-Wcompound-token-split-by-macro]
            } else if (id == rb_intern("big") || id == rb_intern("network")) {
                                                       ^~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    }
    ^
Buffer.c:279:56: note: ')' token is here
            } else if (id == rb_intern("big") || id == rb_intern("network")) {
                                                       ^~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
10 warnings generated.
compiling Call.c
Call.c:516:17: warning: '(' and '{' tokens introducing statement expression appear in different macro
expansion contexts [-Wcompound-token-split-by-macro]
    id_to_ptr = rb_intern("to_ptr");
                ^~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
Call.c:516:17: note: '{' token is here
    id_to_ptr = rb_intern("to_ptr");
                ^~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
Call.c:516:17: warning: '}' and ')' tokens terminating statement expression appear in different macro
expansion contexts [-Wcompound-token-split-by-macro]
    id_to_ptr = rb_intern("to_ptr");
                ^~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    }
    ^
Call.c:516:17: note: ')' token is here
    id_to_ptr = rb_intern("to_ptr");
                ^~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
Call.c:517:20: warning: '(' and '{' tokens introducing statement expression appear in different macro
expansion contexts [-Wcompound-token-split-by-macro]
    id_to_native = rb_intern("to_native");
                   ^~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
Call.c:517:20: note: '{' token is here
    id_to_native = rb_intern("to_native");
                   ^~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
Call.c:517:20: warning: '}' and ')' tokens terminating statement expression appear in different macro
expansion contexts [-Wcompound-token-split-by-macro]
    id_to_native = rb_intern("to_native");
                   ^~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    }
    ^
Call.c:517:20: note: ')' token is here
    id_to_native = rb_intern("to_native");
                   ^~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
Call.c:518:21: warning: '(' and '{' tokens introducing statement expression appear in different macro
expansion contexts [-Wcompound-token-split-by-macro]
    id_map_symbol = rb_intern("__map_symbol");
                    ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
Call.c:518:21: note: '{' token is here
    id_map_symbol = rb_intern("__map_symbol");
                    ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
Call.c:518:21: warning: '}' and ')' tokens terminating statement expression appear in different macro
expansion contexts [-Wcompound-token-split-by-macro]
    id_map_symbol = rb_intern("__map_symbol");
                    ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    }
    ^
Call.c:518:21: note: ')' token is here
    id_map_symbol = rb_intern("__map_symbol");
                    ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
6 warnings generated.
compiling ClosurePool.c
compiling DataConverter.c
DataConverter.c:88:27: warning: '(' and '{' tokens introducing statement expression appear in different
macro expansion contexts [-Wcompound-token-split-by-macro]
    id_native_type_ivar = rb_intern("@native_type");
                          ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
DataConverter.c:88:27: note: '{' token is here
    id_native_type_ivar = rb_intern("@native_type");
                          ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
DataConverter.c:88:27: warning: '}' and ')' tokens terminating statement expression appear in different
macro expansion contexts [-Wcompound-token-split-by-macro]
    id_native_type_ivar = rb_intern("@native_type");
                          ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    }
    ^
DataConverter.c:88:27: note: ')' token is here
    id_native_type_ivar = rb_intern("@native_type");
                          ^~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
2 warnings generated.
compiling DynamicLibrary.c
compiling Function.c
Function.c:951:17: error: implicit declaration of function 'ffi_prep_closure' is invalid in C99
[-Werror,-Wimplicit-function-declaration]
    ffiStatus = ffi_prep_closure(code, &fnInfo->ffi_cif, callback_invoke, closure);
                ^
Function.c:992:15: warning: '(' and '{' tokens introducing statement expression appear in different
macro expansion contexts [-Wcompound-token-split-by-macro]
    id_call = rb_intern("call");
              ^~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
Function.c:992:15: note: '{' token is here
    id_call = rb_intern("call");
              ^~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
Function.c:992:15: warning: '}' and ')' tokens terminating statement expression appear in different
macro expansion contexts [-Wcompound-token-split-by-macro]
    id_call = rb_intern("call");
              ^~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    }
    ^
Function.c:992:15: note: ')' token is here
    id_call = rb_intern("call");
              ^~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
Function.c:993:18: warning: '(' and '{' tokens introducing statement expression appear in different
macro expansion contexts [-Wcompound-token-split-by-macro]
    id_cbtable = rb_intern("@__ffi_callback_table__");
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
Function.c:993:18: note: '{' token is here
    id_cbtable = rb_intern("@__ffi_callback_table__");
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
Function.c:993:18: warning: '}' and ')' tokens terminating statement expression appear in different
macro expansion contexts [-Wcompound-token-split-by-macro]
    id_cbtable = rb_intern("@__ffi_callback_table__");
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    }
    ^
Function.c:993:18: note: ')' token is here
    id_cbtable = rb_intern("@__ffi_callback_table__");
                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
Function.c:994:17: warning: '(' and '{' tokens introducing statement expression appear in different
macro expansion contexts [-Wcompound-token-split-by-macro]
    id_cb_ref = rb_intern("@__ffi_callback__");
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
Function.c:994:17: note: '{' token is here
    id_cb_ref = rb_intern("@__ffi_callback__");
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
Function.c:994:17: warning: '}' and ')' tokens terminating statement expression appear in different
macro expansion contexts [-Wcompound-token-split-by-macro]
    id_cb_ref = rb_intern("@__ffi_callback__");
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    }
    ^
Function.c:994:17: note: ')' token is here
    id_cb_ref = rb_intern("@__ffi_callback__");
                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
Function.c:995:20: warning: '(' and '{' tokens introducing statement expression appear in different
macro expansion contexts [-Wcompound-token-split-by-macro]
    id_to_native = rb_intern("to_native");
                   ^~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
Function.c:995:20: note: '{' token is here
    id_to_native = rb_intern("to_native");
                   ^~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
Function.c:995:20: warning: '}' and ')' tokens terminating statement expression appear in different
macro expansion contexts [-Wcompound-token-split-by-macro]
    id_to_native = rb_intern("to_native");
                   ^~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    }
    ^
Function.c:995:20: note: ')' token is here
    id_to_native = rb_intern("to_native");
                   ^~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
Function.c:996:22: warning: '(' and '{' tokens introducing statement expression appear in different
macro expansion contexts [-Wcompound-token-split-by-macro]
    id_from_native = rb_intern("from_native");
                     ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:23: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                      ^
Function.c:996:22: note: '{' token is here
    id_from_native = rb_intern("from_native");
                     ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1811:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    {                                                   \
    ^
Function.c:996:22: warning: '}' and ')' tokens terminating statement expression appear in different
macro expansion contexts [-Wcompound-token-split-by-macro]
    id_from_native = rb_intern("from_native");
                     ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:24: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1816:5: note: expanded from macro
'RUBY_CONST_ID_CACHE'
    }
    ^
Function.c:996:22: note: ')' token is here
    id_from_native = rb_intern("from_native");
                     ^~~~~~~~~~~~~~~~~~~~~~~~
/Users/joe.fong/.rbenv/versions/2.6.9/include/ruby-2.6.0/ruby/ruby.h:1826:56: note: expanded from macro
'rb_intern'
        __extension__ (RUBY_CONST_ID_CACHE((ID), (str))) : \
                                                       ^
10 warnings and 1 error generated.
make: *** [Function.o] Error 1

make failed, exit code 2

Gem files will remain installed in
/Users/joe.fong/academy/lectures/BuggyProject/vendor/bundle/ruby/2.6.0/gems/ffi-1.9.25 for inspection.
Results logged to
/Users/joe.fong/academy/lectures/BuggyProject/vendor/bundle/ruby/2.6.0/extensions/arm64-darwin-21/2.6.0/ffi-1.9.25/gem_make.out

An error occurred while installing ffi (1.9.25), and Bundler cannot continue.
Make sure that `gem install ffi -v '1.9.25' --source 'https://rubygems.org/'` succeeds before bundling.

In Gemfile:
  guard-rspec was resolved to 4.7.3, which depends on
    guard was resolved to 2.14.2, which depends on
      listen was resolved to 3.1.5, which depends on
        rb-inotify was resolved to 0.9.10, which depends on
          ffi
